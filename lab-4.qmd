---
title: "Lucas Kantorowski"
format: 
  dashboard:
    orientation: columns
    theme: Minty
    nav-buttons:
      - icon: github
        href: https://github.com/LKantoro/lab-3
        aria-label: GitHub
      - icon: linkedin
        href: https://www.linkedin.com/in/lucas-kantorowski/
        aria-label: LinkedIn
server: shiny        
logo: images/wellcomelogo.png
logo-alt: Wellcome Organization Logo
---

```{r}
#| context: setup
#| label: load-packages
#| message: false

```




```{r}
#| context: setup

library(tidyverse)
library(gt)
library(dplyr)
library(leaflet)
library(sf)
library(scales)
library(plotly)
library(readxl)
library(bslib)
library(bsicons)
library(shiny)
```


```{r}
#| context: setup
#| label: read_in_data


bottom30rate = read_csv(here::here("data", "bottom30rate.csv"))


disease_part_of_science = read_csv(here::here("data", "disease_part_of_science.csv"))


non_religious_trust_science = read_csv(here::here("data", "non_religious_trust_science.csv"))


percent_effective = read_csv(here::here("data", "percent_effective.csv"))


percent_effective_and_science = read_csv(here::here("data", "percent_effective_and_science.csv"))

percent_science = read_csv(here::here("data", "percent_science.csv"))

percent_trust = read_csv(here::here("data", "percent_trust.csv"))


religious_trust_science = read_csv(here::here("data", "religious_trust_science.csv"))
  
science_college = read_csv(here::here("data", "science_college.csv"))

science_primary_school = read_csv(here::here("data", "science_primary_school.csv"))


science_secondary_school = read_csv(here::here("data", "science_secondary_school.csv"))

top30rate = read_csv(here::here("data", "top30rate.csv"))

want_to_know_more_disease = read_csv(here::here("data", "want_to_know_more_disease.csv")) 

want_to_know_more_science = read_csv(here::here("data", "want_to_know_more_science.csv")) 
  
wgm2018_full_new2 = read_csv(here::here("data", "wgm2018_full_new2.csv")) 
```






# Science vs. Vaccines

## {.sidebar width="200px"}

```{r}
#| context: setup

selectInput('valuecard1', label = 'Valuecard 1', 
            choice = c('More About Science', 
                       'More About Disease',
                       'Diseases a Part of Science', 
                       'Science at Primary School', 
                       'Science at Secondary School',
                       'Science at College/University'),
            multiple = FALSE, selected = 'More About Science')

selectInput('valuecard2', label = 'Valuecard 2', 
            choice = c('More About Science', 
                       'More About Disease',
                       'Diseases a Part of Science', 
                       'Science at Primary School', 
                       'Science at Secondary School',
                       'Science at College/University'),
            multiple = FALSE, selected = 'More About Disease')

selectInput('valuecard3', label = 'Valuecard 3', 
            choice = c('More About Science', 
                       'More About Disease',
                       'Diseases a Part of Science', 
                       'Science at Primary School', 
                       'Science at Secondary School',
                       'Science at College/University'),
            multiple = FALSE, selected = 'Diseases a Part of Science')
```


## Column - Plots {width="60%"}

### Row {height="75%"}





::: {.card title="Belief Vaccines are Effective vs. Understanding of Science"}

```{r}
#| label: plotly_graph

#scatterplot of vaccination rates vs science

plot_ly(data = percent_effective_and_science, 
        x = ~prop_sci, y = ~percent_eff, 
        type = "scatter", mode = "markers", text = ~country_name, 
        color = ~map_region.x) %>%
  layout(plot_bgcolor='white',
    xaxis = list(range = list(0, 1), tickformat = ".0%", 
                 title = "'Strong' or 'Some' Knowledge of Science"),
    yaxis = list(range = list(0, 1), tickformat = ".0%",
                 title = ""), 
    legend = list(x = 0.85, y = 0.04, bordercolor = 'black',
                       borderwidth = 2, font = list(size = 10))) %>%
  add_trace(showlegend = FALSE, hovertemplate = 'Knowledge of Science: %{x} 
Vaccine Effectiveness: %{y}
%{text}')
```

:::


### Row {height="25%"}


```{r}
#| context: setup

uiOutput('myvaluebox1')
```


```{r}
#| context: setup

uiOutput('myvaluebox2')
```

```{r}
#| context: setup

uiOutput('myvaluebox3')
```




```{r}
#| context: server

#changing font size of valuebox text: 
#https://www.edureka.co/community/32147/change-font-size-of-valuebox-shiny-r

output$myvaluebox1 <- renderUI({
  
  if (input$valuecard1 == 'More About Science')
    v = value_box(
      theme = "info",
      title = "Want To Learn More About Science",
      value = tags$p(paste(round(want_to_know_more_science$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard1 == 'More About Disease')
    v = value_box(
      theme = "info",
      title = "Want To Learn More About Disease",
      value = tags$p(paste(round(want_to_know_more_disease$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
  
  if (input$valuecard1 == 'Diseases a Part of Science')
    v = value_box(
      theme = "info",
      title = "Believe Diseases are a Part of Science",
      value = tags$p(paste(round(disease_part_of_science$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard1 == 'Science at Primary School')
    v = value_box(
      theme = "info",
      title = "Learned About Science at Primary School",
      value = tags$p(paste(round(science_primary_school$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
  
  if (input$valuecard1 == 'Science at Secondary School')
    v = value_box(
      theme = "info",
      title = "Learned About Science at Secondary School",
      value = tags$p(paste(round(science_secondary_school$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard1 == 'Science at College/University')
    v = value_box(
      theme = "info",
      title = "Learned About Science at College/University",
      value = tags$p(paste(round(science_college$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
    
  v
  
})



output$myvaluebox2 <- renderUI({
  
  if (input$valuecard2 == 'More About Science')
    v = value_box(
      theme = "success",
      title = "Want To Learn More About Science",
      value = tags$p(paste(round(want_to_know_more_science$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard2 == 'More About Disease')
    v = value_box(
      theme = "success",
      title = "Want To Learn More About Disease",
      value = tags$p(paste(round(want_to_know_more_disease$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
  
  if (input$valuecard2 == 'Diseases a Part of Science')
    v = value_box(
      theme = "success",
      title = "Believe Diseases are a Part of Science",
      value = tags$p(paste(round(disease_part_of_science$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard2 == 'Science at Primary School')
    v = value_box(
      theme = "success",
      title = "Learned About Science at Primary School",
      value = tags$p(paste(round(science_primary_school$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
  
  if (input$valuecard2 == 'Science at Secondary School')
    v = value_box(
      theme = "success",
      title = "Learned About Science at Secondary School",
      value = tags$p(paste(round(science_secondary_school$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard2 == 'Science at College/University')
    v = value_box(
      theme = "success",
      title = "Learned About Science at College/University",
      value = tags$p(paste(round(science_college$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
    
  v
  
})


output$myvaluebox3 <- renderUI({
  
  if (input$valuecard3 == 'More About Science')
    v = value_box(
      theme = "light",
      title = "Want To Learn More About Science",
      value = tags$p(paste(round(want_to_know_more_science$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard3 == 'More About Disease')
    v = value_box(
      theme = "light",
      title = "Want To Learn More About Disease",
      value = tags$p(paste(round(want_to_know_more_disease$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
  
  if (input$valuecard3 == 'Diseases a Part of Science')
    v = value_box(
      theme = "light",
      title = "Believe Diseases are a Part of Science",
      value = tags$p(paste(round(disease_part_of_science$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard3 == 'Science at Primary School')
    v = value_box(
      theme = "light",
      title = "Learned About Science at Primary School",
      value = tags$p(paste(round(science_primary_school$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
  
  if (input$valuecard3 == 'Science at Secondary School')
    v = value_box(
      theme = "light",
      title = "Learned About Science at Secondary School",
      value = tags$p(paste(round(science_secondary_school$prop * 100,0), '%'),
                     style = "font-size: 300%;")
      )
 
  
  if (input$valuecard3 == 'Science at College/University')
    v = value_box(
      theme = "light",
      title = "Learned About Science at College/University",
      value = tags$p(paste(round(science_college$prop * 100,0), '%'),
                     style = "font-size: 300%;"),
      showcase_layout = showcase_top_right(max_height = "100px")
      )
    
  v
  
})

```


## Column - Medals by year {width="40%"}

### Row - Vaccines {.tabset height="75%"}

::: {.card title="Belief in Vaccine Effectiveness"}

```{r}
#| label: dotplot_1

percent_effective %>% ggplot(aes(x = percent_eff, fill = map_region, 
                              color = map_region)) +
  geom_dotplot(binwidth = .01) + 
  facet_grid(rows = vars(map_region), axis.labels = "margins") +
  labs(x = "", y = "", fill = "",
       title = 
         "People Who 'Agreed' or 'Strongly Agreed' Vaccines Are Effective") +
  geom_text(aes(x = .5, y = .8, label = map_region)) +
  theme_light() + 
  theme(strip.text = element_blank(), legend.position = "none", 
        panel.grid.minor = element_blank(), panel.grid.major =element_blank(),
        plot.title.position = "plot", axis.text.y = element_blank(), 
        axis.ticks.y = element_blank()) +
  scale_x_continuous(labels = scales::percent, limits = c(0,1))
```

:::

::: {.card title="Knowledge of Science"}

```{r}
#| label: dotplot_2

percent_science %>% ggplot(aes(x = prop_sci, fill = map_region, 
                              color = map_region)) +
  geom_dotplot(binwidth = .01) + 
  facet_grid(rows = vars(map_region), axis.labels = "margins") +
  labs(x = "", y = "", fill = "",
       title = "People Who Claim 'A lot' or 'Some' Understanding of Science") +
  geom_text(aes(x = .5, y = .8, label = map_region)) +
  theme_light() + 
  theme(strip.text = element_blank(), legend.position = "none", 
        panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        plot.title.position = "plot", axis.text.y = element_blank(), 
        axis.ticks.y = element_blank()) +
  scale_x_continuous(labels = scales::percent, limits = c(0,1))
```

:::


### Row - Tables {.tabset height="25%"}

::: {.card title="Vaccines are Safe Top 30"}

```{r}
#| label: table_1

#table of safe vaccination rates (in percents)


top30rate %>% select(!total) %>%
  rename("Country" = "country_name",
         "Strongly Agree" = "Strongly_Agree", 
         "Somewhat Agree" = 'Somewhat_Agree',
         "Somewhat Disagree" = 'Somewhat_Disagree',
         "Strongly Disagree" = 'Strongly_Disagree') %>% 
  ungroup() %>%
  slice_head(n = 30) %>%
  gt() %>% 
  cols_align(align = "left", columns = Country) %>% 
  data_color(
    method = "numeric",
    palette = "BuGn"
  ) %>% fmt_percent(c('Strongly Agree', 'Somewhat Agree', 'Neither',
                      'Somewhat Disagree', 'Strongly Disagree'))
```
:::

::: {.card title="Vaccines are Safe Bottom 30"}

```{r}
#| label: table_2

#table of safe vaccination rates (in percents)



bottom30rate %>% select(!total) %>%
  rename("Country" = "country_name",
         "Strongly Agree" = "Strongly_Agree", 
         "Somewhat Agree" = 'Somewhat_Agree',
         "Somewhat Disagree" = 'Somewhat_Disagree',
         "Strongly Disagree" = 'Strongly_Disagree') %>% 
  ungroup() %>% 
  slice_head(n = 30) %>%
  gt() %>% 
  cols_align(align = "left", columns = Country) %>% 
  data_color(
    method = "numeric",
    palette = "BuGn"
  ) %>% fmt_percent(c('Strongly Agree', 'Somewhat Agree', 'Neither',
                      'Somewhat Disagree', 'Strongly Disagree'))

```
:::


# Trust in Scientists

## {.sidebar width="200px"}

```{r}
#| context: setup


#Create global sidebars by adding the .sidebar class to level 1 headings. Sidebars can include code cells as well as images, narrative, and links.

sliderInput('numBins', 'Number of Bins', 
            min=2, max=11,
            value=11, 
            step=1, round=0)
br()
p()

```


## Column - Plots {width="60%"}

::: {.card title="Percentage of Population Who Have High Trust in Scientists"}


```{r}
#| context: setup

#https://rstudio.github.io/leaflet/articles/shiny.html
leafletOutput('mymap')
```


```{r}
#| context: setup
#| label: chloropleth_prep_1

#finding country geometries: https://r-graph-gallery.com/183-choropleth-map-with-leaflet.html

#download.file(
##  "https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/world_shape_file.zip",
#  destfile = "data/world_shape_file.zip"
#)

#system("unzip DATA/world_shape_file.zip")

world_sf <- read_sf(paste0(
  getwd(), "/data/world_shape_file/",
  "TM_WORLD_BORDERS_SIMPL-0.3.shp"
))


chloroplethdf = right_join(percent_trust, world_sf, 
                           by = join_by(country_name == NAME))

chloroplethdf = st_sf(chloroplethdf)
```


```{r}
#| context: server
#| label: chloropleth1


#creating bins for coloring
colorpal <- reactive({
  colorBin("Spectral", reverse = FALSE, domain = chloroplethdf$perc_trust,
               bins = seq(0,100,length.out = input$numBins))
})


#only include aspects of the map that wont need to be changed dynamically
output$mymap <- renderLeaflet({ 
  
  pal <- colorpal()
  
  leaflet(chloroplethdf) %>% addTiles()  %>%
    setView(lng = 0, lat = 0, zoom = 2) %>%
    addPolygons(weight = .2, opacity = 1,
                fillColor = ~pal(perc_trust), 
                popup = ~paste(country_name, ":",perc_trust, '%'), 
                label = ~paste(country_name, ":",perc_trust, '%'), 
                stroke = FALSE) %>%
    addLegend(pal = pal, title = "",
              values = ~perc_trust, position = "bottomleft",            
              labFormat = labelFormat(suffix = "%"))
})

#aspects of map that will be changed dynamically

observe({
  
  pal <- colorpal()

  leafletProxy("mymap", data = chloroplethdf)  %>% 
    clearShapes() %>%
    addPolygons(weight = .2, opacity = 1,
                fillColor = ~pal(perc_trust), 
                popup = ~paste(country_name, ":",perc_trust, '%'), 
                label = ~paste(country_name, ":",perc_trust, '%'), 
                stroke = FALSE)
    
})

observe({
    pal <- colorpal()

    leafletProxy("mymap", data = chloroplethdf) %>% 
    clearControls() %>%
    addLegend(pal = pal, title = "",
              values = ~perc_trust, position = "bottomleft",            
              labFormat = labelFormat(suffix = "%"))
    
  })
```

:::


## Column - Medals by year {width="40%"}

### Row - Valueboxes {height="30%"}



::: {.valuebox icon="yin-yang" color="#c3f9de"}
`{r} paste(round(religious_trust_science$prop*100,1),"%")`

of Religious People Have High Trust in Science

:::

::: {.valuebox icon="slash-circle" color="#f2cad2"}
`{r} paste(round(non_religious_trust_science$prop*100,1),"%")`

of Non-Religious People Have High Trust in Science
:::

### Row - Medals By Year {height="70%"}

::: {.card title="Science Belief By Education Level"}


```{r}
#| label: barplot
#barplot in distribution of belief about science by education level

wgm2018_full_new2 %>% filter(Q12 %in% c(1,2,3,4)) %>% 
  filter(Education %in% c(1,2,3)) %>%
  ggplot(aes(x = factor(Education, levels = c('1', '2', '3'), 
                        labels = c('Primary','Secondary', 'Tertiary')),
             fill = factor(Q12, levels = c('4', '3', '2', '1'), 
                           labels = c('None', 'Little', 'Some', 'Strong')))) + 
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  labs(x = 'Education Level', y = '', fill = 'Belief Level') +
  theme(legend.position = "right", panel.grid = element_blank(),
        axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
        plot.title.position = "plot", panel.grid.major = element_blank()) +
  scale_fill_manual(values = c('#f2cad2', '#f5d8e3', '#d3fdef', '#c3f9de')) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major.x =element_blank(),
        panel.grid.major.y =element_blank(), axis.ticks.x = element_blank())

```

:::